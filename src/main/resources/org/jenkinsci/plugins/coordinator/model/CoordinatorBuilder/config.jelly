<!-- it's included in org/jenkinsci/plugins/coordinator/model/CoordinatorProject/configure-entries.jelly -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" 
	xmlns:st="jelly:stapler" 
	xmlns:d="jelly:define"
	xmlns:l="/lib/layout" 
	xmlns:t="/lib/hudson" 
	xmlns:f="/lib/form"
	xmlns:p="/lib/hudson/project">
	<f:entry title="${%Execution Plan}" field="executionPlan">
		<f:invisibleEntry>
			<!-- 
				the checkUrl is generated by prepareDatabinding.jelly 
					-> <j:expr value="${h.calcCheckUrl(pattrs,  pattrs.checkUrl,descriptor,pattrs.field)}" />
					-> hudson.Functions#calcCheckUrl 
				
				and ui javascript for this checkUrl to work lies in hudson-behavior.js
					-> FormChecker.delayedCheck 
			-->
			<f:textbox checkMethod="POST"/>
        </f:invisibleEntry>
		<input id="executionPlan" name="_.executionPlan" type="hidden" value="{'id':'testId','text':'testText','icon':'testIcon'}"/>
	</f:entry>
	
	
	<!-- 
		doCheckXXX approach is not suitable for our case, since Http Get request got QueryParameter limited length (2k)
		we may leave the node validation 
		1. tree level, toJSONString validation and form submission
		2. single node level, on jstree's Event on `create_node, set_text, rename_node, paste`.
		
		check if the node's text stands for an existing project in jenkins 
		
		do not use `return AutoCompletionCandidates.ofJobNames(TopLevelItem.class, value, container);`
		since it handles "../xxx" or "/xxx"
		we need only the job name no prefix, though we can take a look on it.
		
		Stapler-Trace-001:-> evaluate(<hudson.model.Hudson@3f1abd8> :hudson.model.Hudson,"/descriptorByName/hudson.model.AllView/autoCompleteCopyNewItemFrom")
		Stapler-Trace-002:-> evaluate(((StaplerProxy)<hudson.model.Hudson@3f1abd8>).getTarget(),"/descriptorByName/hudson.model.AllView/autoCompleteCopyNewItemFrom")
		Stapler-Trace-003:-> evaluate(<hudson.model.Hudson@3f1abd8>.getDescriptorByName("hudson.model.AllView"),"/autoCompleteCopyNewItemFrom")
		Stapler-Trace-004:-> evaluate(<hudson.model.AllView$DescriptorImpl@65691318> :hudson.model.AllView$DescriptorImpl,"/autoCompleteCopyNewItemFrom")
		Stapler-Trace-005:-> <hudson.model.AllView$DescriptorImpl@65691318>.doAutoCompleteCopyNewItemFrom(...)
	-->
</j:jelly>